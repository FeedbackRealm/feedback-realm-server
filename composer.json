{
    "name": "cakephp/app",
    "description": "CakePHP skeleton app",
    "homepage": "https://cakephp.org",
    "type": "project",
    "license": "MIT",
    "require": {
        "php": ">=7.4",
        "ext-json": "*",
        "cakephp/authentication": "^2.10",
        "cakephp/authorization": "^2.4",
        "cakephp/cakephp": "^4.5.0",
        "cakephp/migrations": "^3.7",
        "cakephp/plugin-installer": "^1.3",
        "cakephp/queue": "^1.0",
        "enqueue/fs": "^0.10.19",
        "enqueue/redis": "^0.10.19",
        "fakerphp/faker": "^1.23",
        "friendsofcake/bootstrap-ui": "^4.0",
        "mobiledetect/mobiledetectlib": "^3.74",
        "muffin/trash": "^3.1",
        "predis/predis": "^1"
    },
    "require-dev": {
        "cakephp/bake": "^2.8",
        "cakephp/cakephp-codesniffer": "^4.5",
        "cakephp/debug_kit": "^4.9",
        "captainhook/captainhook": "^5.18",
        "josegonzalez/dotenv": "^4.0",
        "phpmd/phpmd": "@stable",
        "phpstan/phpstan": "^1.10",
        "phpunit/phpunit": "^9.6",
        "ramsey/conventional-commits": "^1.4"
    },
    "suggest": {
        "markstory/asset_compress": "An asset compression plugin which provides file concatenation and a flexible filter system for preprocessing and minification.",
        "dereuromark/cakephp-ide-helper": "After baking your code, this keeps your annotations in sync with the code evolving from there on for maximum IDE and PHPStan/Psalm compatibility.",
        "phpstan/phpstan": "PHPStan focuses on finding errors in your code without actually running it. It catches whole classes of bugs even before you write tests for the code.",
        "cakephp/repl": "Console tools for a REPL interface for CakePHP applications."
    },
    "autoload": {
        "psr-4": {
            "App\\": "src/",
            "CustomBake\\": "plugins/CustomBake/src/"
        }
    },
    "autoload-dev": {
        "psr-4": {
            "App\\Test\\": "tests/",
            "Cake\\Test\\": "vendor/cakephp/cakephp/tests/",
            "CustomBake\\Test\\": "plugins/CustomBake/tests/"
        }
    },
    "scripts": {
        "post-autoload-dump": "vendor/bin/captainhook install -f -s",
        "post-install-cmd": "App\\Console\\Installer::postInstall",
        "post-create-project-cmd": "App\\Console\\Installer::postInstall",
        "check": [
            "@test",
            "@cs-check",
            "@md-check"
        ],
        "cs-check": "phpcs --colors -p",
        "cs-fix": "phpcbf --colors -p",
        "md-check": "phpmd src text phpmd.xml",
        "test": "phpunit --colors=always",
        "docker:start": "./bin/docker start",
        "docker:stop": "./bin/docker stop",
        "docker": [
            "Composer\\Config::disableProcessTimeout",
            "@docker:start"
        ],
        "server:start": "./bin/server.php start",
        "server": [
            "Composer\\Config::disableProcessTimeout",
            "@server:start"
        ],
        "tunnel": [
            "Composer\\Config::disableProcessTimeout",
            "./bin/tunnel.php"
        ],
        "queue": [
            "Composer\\Config::disableProcessTimeout",
            "./bin/cake queue worker"
        ]
    },
    "minimum-stability": "dev",
    "prefer-stable": true,
    "config": {
        "sort-packages": true,
        "allow-plugins": {
            "cakephp/plugin-installer": true,
            "dealerdirect/phpcodesniffer-composer-installer": true
        }
    }
}
